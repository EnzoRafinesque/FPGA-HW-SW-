// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module matmul_matmul_Pipeline_nopart1_nopart2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_V_address0,
        C_V_ce0,
        C_V_we0,
        C_V_d0,
        C_V_address1,
        C_V_ce1,
        C_V_we1,
        C_V_d1,
        A_V_address0,
        A_V_ce0,
        A_V_q0,
        B_V_address0,
        B_V_ce0,
        B_V_q0,
        B_V_address1,
        B_V_ce1,
        B_V_q1,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] C_V_address0;
output   C_V_ce0;
output   C_V_we0;
output  [15:0] C_V_d0;
output  [7:0] C_V_address1;
output   C_V_ce1;
output   C_V_we1;
output  [15:0] C_V_d1;
output  [7:0] A_V_address0;
output   A_V_ce0;
input  [15:0] A_V_q0;
output  [7:0] B_V_address0;
output   B_V_ce0;
input  [15:0] B_V_q0;
output  [7:0] B_V_address1;
output   B_V_ce1;
input  [15:0] B_V_q1;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg[7:0] C_V_address0;
reg C_V_ce0;
reg C_V_we0;
reg[15:0] C_V_d0;
reg[7:0] C_V_address1;
reg C_V_ce1;
reg C_V_we1;
reg[15:0] C_V_d1;
reg A_V_ce0;
reg[7:0] B_V_address0;
reg B_V_ce0;
reg[7:0] B_V_address1;
reg B_V_ce1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln68_reg_1511;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln68_fu_477_p2;
wire   [3:0] empty_31_fu_523_p1;
reg   [3:0] empty_31_reg_1515;
wire   [0:0] cmp59_fu_527_p2;
reg   [0:0] cmp59_reg_1520;
reg   [0:0] cmp59_reg_1520_pp0_iter1_reg;
wire   [7:0] tmp_19_fu_550_p3;
reg   [7:0] tmp_19_reg_1545;
wire   [0:0] cmp72_fu_578_p2;
reg   [0:0] cmp72_reg_1573;
reg   [0:0] cmp72_reg_1573_pp0_iter1_reg;
reg  signed [15:0] A_V_load_reg_1587;
wire   [7:0] tmp_7_fu_709_p3;
reg   [7:0] tmp_7_reg_1637;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [31:0] tmp_23_cast_fu_545_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln232_fu_558_p1;
wire   [31:0] tmp_20_fu_569_p3;
wire   [31:0] tmp_21_fu_610_p3;
wire    ap_block_pp0_stage1;
wire   [31:0] tmp_22_fu_624_p3;
wire   [31:0] tmp_23_fu_638_p3;
wire    ap_block_pp0_stage2;
wire   [31:0] tmp_24_fu_652_p3;
wire   [31:0] tmp_25_fu_669_p3;
wire    ap_block_pp0_stage3;
wire   [31:0] tmp_26_fu_683_p3;
wire   [31:0] tmp_7_cast_fu_716_p1;
wire    ap_block_pp0_stage4;
wire   [31:0] tmp_8_fu_727_p3;
wire   [31:0] tmp_27_fu_741_p3;
wire   [31:0] tmp_28_fu_755_p3;
wire   [31:0] tmp_9_fu_797_p3;
wire    ap_block_pp0_stage5;
wire   [31:0] tmp_s_fu_811_p3;
wire   [31:0] tmp_29_fu_825_p3;
wire   [31:0] tmp_30_fu_839_p3;
wire   [31:0] tmp_3_fu_881_p3;
wire    ap_block_pp0_stage6;
wire   [31:0] tmp_4_fu_895_p3;
wire   [31:0] tmp_31_fu_909_p3;
wire   [31:0] tmp_32_fu_923_p3;
wire   [31:0] tmp_5_fu_965_p3;
wire    ap_block_pp0_stage7;
wire   [31:0] tmp_6_fu_979_p3;
wire   [31:0] tmp_33_fu_993_p3;
wire   [31:0] tmp_34_fu_1007_p3;
wire   [31:0] tmp_10_fu_1049_p3;
wire   [31:0] tmp_11_fu_1063_p3;
wire   [31:0] tmp_12_fu_1105_p3;
wire   [31:0] tmp_13_fu_1119_p3;
wire   [31:0] tmp_14_fu_1161_p3;
wire   [31:0] tmp_15_fu_1175_p3;
wire   [31:0] tmp_16_fu_1217_p3;
wire   [31:0] tmp_17_fu_1231_p3;
reg   [4:0] col_fu_80;
wire   [4:0] add_ln72_fu_584_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_col_load;
reg   [15:0] temp_sum_V_0_1_fu_84;
wire   [15:0] grp_fu_1248_p3;
reg   [15:0] temp_sum_V_1_1_fu_88;
wire   [15:0] grp_fu_1258_p3;
reg   [15:0] temp_sum_V_2_1_fu_92;
wire   [15:0] grp_fu_1268_p3;
reg   [15:0] temp_sum_V_3_1_fu_96;
wire   [15:0] grp_fu_1277_p3;
reg   [15:0] temp_sum_V_4_1_fu_100;
wire   [15:0] grp_fu_1286_p3;
reg   [15:0] temp_sum_V_5_1_fu_104;
wire   [15:0] grp_fu_1295_p3;
reg   [15:0] temp_sum_V_6_1_fu_108;
wire   [15:0] grp_fu_1304_p3;
reg   [15:0] temp_sum_V_7_1_fu_112;
wire   [15:0] grp_fu_1313_p3;
reg   [15:0] temp_sum_V_8_1_fu_116;
wire   [15:0] grp_fu_1322_p3;
reg   [15:0] temp_sum_V_9_1_fu_120;
wire   [15:0] grp_fu_1331_p3;
reg   [15:0] temp_sum_V_10_1_fu_124;
wire   [15:0] grp_fu_1340_p3;
reg   [15:0] temp_sum_V_11_1_fu_128;
wire   [15:0] grp_fu_1349_p3;
reg   [15:0] temp_sum_V_12_1_fu_132;
wire   [15:0] grp_fu_1358_p3;
reg   [15:0] temp_sum_V_13_1_fu_136;
wire   [15:0] grp_fu_1367_p3;
reg   [15:0] temp_sum_V_14_1_fu_140;
wire   [15:0] grp_fu_1376_p3;
reg   [15:0] temp_sum_V_15_1_fu_144;
wire   [15:0] grp_fu_1385_p3;
reg   [4:0] row_fu_148;
wire   [4:0] select_ln68_1_fu_515_p3;
reg   [4:0] ap_sig_allocacmp_row_load;
reg   [8:0] indvar_flatten_fu_152;
wire   [8:0] add_ln68_1_fu_483_p2;
reg   [8:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [0:0] icmp_ln72_fu_501_p2;
wire   [4:0] add_ln68_fu_495_p2;
wire   [4:0] select_ln68_fu_507_p3;
wire   [3:0] empty_32_fu_533_p1;
wire   [7:0] tmp_18_fu_537_p3;
wire   [7:0] or_ln232_fu_563_p2;
wire   [7:0] or_ln232_1_fu_605_p2;
wire   [7:0] or_ln232_2_fu_619_p2;
wire   [7:0] or_ln232_3_fu_633_p2;
wire   [7:0] or_ln232_4_fu_647_p2;
wire   [7:0] or_ln232_5_fu_664_p2;
wire   [7:0] or_ln232_6_fu_678_p2;
wire   [7:0] or_ln82_fu_721_p2;
wire   [7:0] or_ln232_7_fu_736_p2;
wire   [7:0] or_ln232_8_fu_750_p2;
wire   [7:0] or_ln82_1_fu_792_p2;
wire   [7:0] or_ln82_2_fu_806_p2;
wire   [7:0] or_ln232_9_fu_820_p2;
wire   [7:0] or_ln232_10_fu_834_p2;
wire   [7:0] or_ln82_3_fu_876_p2;
wire   [7:0] or_ln82_4_fu_890_p2;
wire   [7:0] or_ln232_11_fu_904_p2;
wire   [7:0] or_ln232_12_fu_918_p2;
wire   [7:0] or_ln82_5_fu_960_p2;
wire   [7:0] or_ln82_6_fu_974_p2;
wire   [7:0] or_ln232_13_fu_988_p2;
wire   [7:0] or_ln232_14_fu_1002_p2;
wire   [7:0] or_ln82_7_fu_1044_p2;
wire   [7:0] or_ln82_8_fu_1058_p2;
wire   [7:0] or_ln82_9_fu_1100_p2;
wire   [7:0] or_ln82_10_fu_1114_p2;
wire   [7:0] or_ln82_11_fu_1156_p2;
wire   [7:0] or_ln82_12_fu_1170_p2;
wire   [7:0] or_ln82_13_fu_1212_p2;
wire   [7:0] or_ln82_14_fu_1226_p2;
wire   [15:0] grp_fu_1248_p2;
wire   [15:0] grp_fu_1258_p2;
wire   [15:0] grp_fu_1268_p2;
wire   [15:0] grp_fu_1277_p2;
wire   [15:0] grp_fu_1286_p2;
wire   [15:0] grp_fu_1295_p2;
wire   [15:0] grp_fu_1304_p2;
wire   [15:0] grp_fu_1313_p2;
wire   [15:0] grp_fu_1322_p2;
wire   [15:0] grp_fu_1331_p2;
wire   [15:0] grp_fu_1340_p2;
wire   [15:0] grp_fu_1349_p2;
wire   [15:0] grp_fu_1358_p2;
wire   [15:0] grp_fu_1367_p2;
wire   [15:0] grp_fu_1376_p2;
wire   [15:0] grp_fu_1385_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_q0),
    .din2(grp_fu_1248_p2),
    .ce(1'b1),
    .dout(grp_fu_1248_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q0),
    .din1(A_V_q0),
    .din2(grp_fu_1258_p2),
    .ce(1'b1),
    .dout(grp_fu_1258_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1268_p2),
    .ce(1'b1),
    .dout(grp_fu_1268_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q0),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1277_p2),
    .ce(1'b1),
    .dout(grp_fu_1277_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1286_p2),
    .ce(1'b1),
    .dout(grp_fu_1286_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q0),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1295_p2),
    .ce(1'b1),
    .dout(grp_fu_1295_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1304_p2),
    .ce(1'b1),
    .dout(grp_fu_1304_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q0),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1313_p2),
    .ce(1'b1),
    .dout(grp_fu_1313_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1322_p2),
    .ce(1'b1),
    .dout(grp_fu_1322_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q0),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1331_p2),
    .ce(1'b1),
    .dout(grp_fu_1331_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1340_p2),
    .ce(1'b1),
    .dout(grp_fu_1340_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q0),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1349_p2),
    .ce(1'b1),
    .dout(grp_fu_1349_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1358_p2),
    .ce(1'b1),
    .dout(grp_fu_1358_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q0),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1367_p2),
    .ce(1'b1),
    .dout(grp_fu_1367_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q1),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1376_p2),
    .ce(1'b1),
    .dout(grp_fu_1376_p3)
);

matmul_mac_muladd_16s_16s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_16s_16s_16ns_16_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(B_V_q0),
    .din1(A_V_load_reg_1587),
    .din2(grp_fu_1385_p2),
    .ce(1'b1),
    .dout(grp_fu_1385_p3)
);

matmul_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_477_p2 == 1'd0))) begin
            col_fu_80 <= add_ln72_fu_584_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_fu_80 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_477_p2 == 1'd0))) begin
            indvar_flatten_fu_152 <= add_ln68_1_fu_483_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_152 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln68_fu_477_p2 == 1'd0))) begin
            row_fu_148 <= select_ln68_1_fu_515_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            row_fu_148 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        A_V_load_reg_1587 <= A_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln68_fu_477_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp59_reg_1520 <= cmp59_fu_527_p2;
        cmp72_reg_1573 <= cmp72_fu_578_p2;
        empty_31_reg_1515 <= empty_31_fu_523_p1;
        tmp_19_reg_1545[7 : 4] <= tmp_19_fu_550_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp59_reg_1520_pp0_iter1_reg <= cmp59_reg_1520;
        cmp72_reg_1573_pp0_iter1_reg <= cmp72_reg_1573;
        icmp_ln68_reg_1511 <= icmp_ln68_fu_477_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        temp_sum_V_0_1_fu_84 <= grp_fu_1248_p3;
        temp_sum_V_1_1_fu_88 <= grp_fu_1258_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        temp_sum_V_10_1_fu_124 <= grp_fu_1340_p3;
        temp_sum_V_11_1_fu_128 <= grp_fu_1349_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        temp_sum_V_12_1_fu_132 <= grp_fu_1358_p3;
        temp_sum_V_13_1_fu_136 <= grp_fu_1367_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        temp_sum_V_14_1_fu_140 <= grp_fu_1376_p3;
        temp_sum_V_15_1_fu_144 <= grp_fu_1385_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        temp_sum_V_2_1_fu_92 <= grp_fu_1268_p3;
        temp_sum_V_3_1_fu_96 <= grp_fu_1277_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        temp_sum_V_4_1_fu_100 <= grp_fu_1286_p3;
        temp_sum_V_5_1_fu_104 <= grp_fu_1295_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        temp_sum_V_6_1_fu_108 <= grp_fu_1304_p3;
        temp_sum_V_7_1_fu_112 <= grp_fu_1313_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_sum_V_8_1_fu_116 <= grp_fu_1322_p3;
        temp_sum_V_9_1_fu_120 <= grp_fu_1331_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_7_reg_1637[7 : 4] <= tmp_7_fu_709_p3[7 : 4];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_V_ce0 = 1'b1;
    end else begin
        A_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            B_V_address0 = tmp_34_fu_1007_p3;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            B_V_address0 = tmp_32_fu_923_p3;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            B_V_address0 = tmp_30_fu_839_p3;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            B_V_address0 = tmp_28_fu_755_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_V_address0 = tmp_26_fu_683_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_V_address0 = tmp_24_fu_652_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_V_address0 = tmp_22_fu_624_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_V_address0 = tmp_20_fu_569_p3;
        end else begin
            B_V_address0 = 'bx;
        end
    end else begin
        B_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            B_V_address1 = tmp_33_fu_993_p3;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            B_V_address1 = tmp_31_fu_909_p3;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            B_V_address1 = tmp_29_fu_825_p3;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            B_V_address1 = tmp_27_fu_741_p3;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            B_V_address1 = tmp_25_fu_669_p3;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            B_V_address1 = tmp_23_fu_638_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            B_V_address1 = tmp_21_fu_610_p3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            B_V_address1 = zext_ln232_fu_558_p1;
        end else begin
            B_V_address1 = 'bx;
        end
    end else begin
        B_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_V_ce0 = 1'b1;
    end else begin
        B_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        B_V_ce1 = 1'b1;
    end else begin
        B_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        C_V_address0 = tmp_17_fu_1231_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        C_V_address0 = tmp_15_fu_1175_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_V_address0 = tmp_13_fu_1119_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_V_address0 = tmp_11_fu_1063_p3;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        C_V_address0 = tmp_6_fu_979_p3;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        C_V_address0 = tmp_4_fu_895_p3;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        C_V_address0 = tmp_s_fu_811_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        C_V_address0 = tmp_8_fu_727_p3;
    end else begin
        C_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        C_V_address1 = tmp_16_fu_1217_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        C_V_address1 = tmp_14_fu_1161_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_V_address1 = tmp_12_fu_1105_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_V_address1 = tmp_10_fu_1049_p3;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        C_V_address1 = tmp_5_fu_965_p3;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        C_V_address1 = tmp_3_fu_881_p3;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        C_V_address1 = tmp_9_fu_797_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        C_V_address1 = tmp_7_cast_fu_716_p1;
    end else begin
        C_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_V_ce0 = 1'b1;
    end else begin
        C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_V_ce1 = 1'b1;
    end else begin
        C_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        C_V_d0 = grp_fu_1385_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        C_V_d0 = grp_fu_1367_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_V_d0 = grp_fu_1349_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_V_d0 = grp_fu_1331_p3;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        C_V_d0 = grp_fu_1313_p3;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        C_V_d0 = grp_fu_1295_p3;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        C_V_d0 = grp_fu_1277_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        C_V_d0 = grp_fu_1258_p3;
    end else begin
        C_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        C_V_d1 = grp_fu_1376_p3;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        C_V_d1 = grp_fu_1358_p3;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        C_V_d1 = grp_fu_1340_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        C_V_d1 = grp_fu_1322_p3;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        C_V_d1 = grp_fu_1304_p3;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        C_V_d1 = grp_fu_1286_p3;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        C_V_d1 = grp_fu_1268_p3;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        C_V_d1 = grp_fu_1248_p3;
    end else begin
        C_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cmp72_reg_1573_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cmp72_reg_1573_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cmp72_reg_1573_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_V_we0 = 1'b1;
    end else begin
        C_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cmp72_reg_1573_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cmp72_reg_1573_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln68_reg_1511 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (cmp72_reg_1573 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (cmp72_reg_1573_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        C_V_we1 = 1'b1;
    end else begin
        C_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln68_reg_1511 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col_load = 5'd0;
    end else begin
        ap_sig_allocacmp_col_load = col_fu_80;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 9'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_152;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_row_load = 5'd0;
    end else begin
        ap_sig_allocacmp_row_load = row_fu_148;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_V_address0 = tmp_23_cast_fu_545_p1;

assign add_ln68_1_fu_483_p2 = (ap_sig_allocacmp_indvar_flatten_load + 9'd1);

assign add_ln68_fu_495_p2 = (ap_sig_allocacmp_row_load + 5'd1);

assign add_ln72_fu_584_p2 = (select_ln68_fu_507_p3 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign cmp59_fu_527_p2 = ((select_ln68_fu_507_p3 == 5'd0) ? 1'b1 : 1'b0);

assign cmp72_fu_578_p2 = ((select_ln68_fu_507_p3 == 5'd15) ? 1'b1 : 1'b0);

assign empty_31_fu_523_p1 = select_ln68_1_fu_515_p3[3:0];

assign empty_32_fu_533_p1 = select_ln68_fu_507_p3[3:0];

assign grp_fu_1248_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_0_1_fu_84);

assign grp_fu_1258_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_1_1_fu_88);

assign grp_fu_1268_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_2_1_fu_92);

assign grp_fu_1277_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_3_1_fu_96);

assign grp_fu_1286_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_4_1_fu_100);

assign grp_fu_1295_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_5_1_fu_104);

assign grp_fu_1304_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_6_1_fu_108);

assign grp_fu_1313_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_7_1_fu_112);

assign grp_fu_1322_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_8_1_fu_116);

assign grp_fu_1331_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_9_1_fu_120);

assign grp_fu_1340_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_10_1_fu_124);

assign grp_fu_1349_p2 = ((cmp59_reg_1520[0:0] == 1'b1) ? 16'd0 : temp_sum_V_11_1_fu_128);

assign grp_fu_1358_p2 = ((cmp59_reg_1520_pp0_iter1_reg[0:0] == 1'b1) ? 16'd0 : temp_sum_V_12_1_fu_132);

assign grp_fu_1367_p2 = ((cmp59_reg_1520_pp0_iter1_reg[0:0] == 1'b1) ? 16'd0 : temp_sum_V_13_1_fu_136);

assign grp_fu_1376_p2 = ((cmp59_reg_1520_pp0_iter1_reg[0:0] == 1'b1) ? 16'd0 : temp_sum_V_14_1_fu_140);

assign grp_fu_1385_p2 = ((cmp59_reg_1520_pp0_iter1_reg[0:0] == 1'b1) ? 16'd0 : temp_sum_V_15_1_fu_144);

assign icmp_ln68_fu_477_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_501_p2 = ((ap_sig_allocacmp_col_load == 5'd16) ? 1'b1 : 1'b0);

assign or_ln232_10_fu_834_p2 = (tmp_19_reg_1545 | 8'd11);

assign or_ln232_11_fu_904_p2 = (tmp_19_reg_1545 | 8'd12);

assign or_ln232_12_fu_918_p2 = (tmp_19_reg_1545 | 8'd13);

assign or_ln232_13_fu_988_p2 = (tmp_19_reg_1545 | 8'd14);

assign or_ln232_14_fu_1002_p2 = (tmp_19_reg_1545 | 8'd15);

assign or_ln232_1_fu_605_p2 = (tmp_19_reg_1545 | 8'd2);

assign or_ln232_2_fu_619_p2 = (tmp_19_reg_1545 | 8'd3);

assign or_ln232_3_fu_633_p2 = (tmp_19_reg_1545 | 8'd4);

assign or_ln232_4_fu_647_p2 = (tmp_19_reg_1545 | 8'd5);

assign or_ln232_5_fu_664_p2 = (tmp_19_reg_1545 | 8'd6);

assign or_ln232_6_fu_678_p2 = (tmp_19_reg_1545 | 8'd7);

assign or_ln232_7_fu_736_p2 = (tmp_19_reg_1545 | 8'd8);

assign or_ln232_8_fu_750_p2 = (tmp_19_reg_1545 | 8'd9);

assign or_ln232_9_fu_820_p2 = (tmp_19_reg_1545 | 8'd10);

assign or_ln232_fu_563_p2 = (tmp_19_fu_550_p3 | 8'd1);

assign or_ln82_10_fu_1114_p2 = (tmp_7_reg_1637 | 8'd11);

assign or_ln82_11_fu_1156_p2 = (tmp_7_reg_1637 | 8'd12);

assign or_ln82_12_fu_1170_p2 = (tmp_7_reg_1637 | 8'd13);

assign or_ln82_13_fu_1212_p2 = (tmp_7_reg_1637 | 8'd14);

assign or_ln82_14_fu_1226_p2 = (tmp_7_reg_1637 | 8'd15);

assign or_ln82_1_fu_792_p2 = (tmp_7_reg_1637 | 8'd2);

assign or_ln82_2_fu_806_p2 = (tmp_7_reg_1637 | 8'd3);

assign or_ln82_3_fu_876_p2 = (tmp_7_reg_1637 | 8'd4);

assign or_ln82_4_fu_890_p2 = (tmp_7_reg_1637 | 8'd5);

assign or_ln82_5_fu_960_p2 = (tmp_7_reg_1637 | 8'd6);

assign or_ln82_6_fu_974_p2 = (tmp_7_reg_1637 | 8'd7);

assign or_ln82_7_fu_1044_p2 = (tmp_7_reg_1637 | 8'd8);

assign or_ln82_8_fu_1058_p2 = (tmp_7_reg_1637 | 8'd9);

assign or_ln82_9_fu_1100_p2 = (tmp_7_reg_1637 | 8'd10);

assign or_ln82_fu_721_p2 = (tmp_7_fu_709_p3 | 8'd1);

assign select_ln68_1_fu_515_p3 = ((icmp_ln72_fu_501_p2[0:0] == 1'b1) ? add_ln68_fu_495_p2 : ap_sig_allocacmp_row_load);

assign select_ln68_fu_507_p3 = ((icmp_ln72_fu_501_p2[0:0] == 1'b1) ? 5'd0 : ap_sig_allocacmp_col_load);

assign tmp_10_fu_1049_p3 = {{24'd0}, {or_ln82_7_fu_1044_p2}};

assign tmp_11_fu_1063_p3 = {{24'd0}, {or_ln82_8_fu_1058_p2}};

assign tmp_12_fu_1105_p3 = {{24'd0}, {or_ln82_9_fu_1100_p2}};

assign tmp_13_fu_1119_p3 = {{24'd0}, {or_ln82_10_fu_1114_p2}};

assign tmp_14_fu_1161_p3 = {{24'd0}, {or_ln82_11_fu_1156_p2}};

assign tmp_15_fu_1175_p3 = {{24'd0}, {or_ln82_12_fu_1170_p2}};

assign tmp_16_fu_1217_p3 = {{24'd0}, {or_ln82_13_fu_1212_p2}};

assign tmp_17_fu_1231_p3 = {{24'd0}, {or_ln82_14_fu_1226_p2}};

assign tmp_18_fu_537_p3 = {{empty_31_fu_523_p1}, {empty_32_fu_533_p1}};

assign tmp_19_fu_550_p3 = {{empty_32_fu_533_p1}, {4'd0}};

assign tmp_20_fu_569_p3 = {{24'd0}, {or_ln232_fu_563_p2}};

assign tmp_21_fu_610_p3 = {{24'd0}, {or_ln232_1_fu_605_p2}};

assign tmp_22_fu_624_p3 = {{24'd0}, {or_ln232_2_fu_619_p2}};

assign tmp_23_cast_fu_545_p1 = tmp_18_fu_537_p3;

assign tmp_23_fu_638_p3 = {{24'd0}, {or_ln232_3_fu_633_p2}};

assign tmp_24_fu_652_p3 = {{24'd0}, {or_ln232_4_fu_647_p2}};

assign tmp_25_fu_669_p3 = {{24'd0}, {or_ln232_5_fu_664_p2}};

assign tmp_26_fu_683_p3 = {{24'd0}, {or_ln232_6_fu_678_p2}};

assign tmp_27_fu_741_p3 = {{24'd0}, {or_ln232_7_fu_736_p2}};

assign tmp_28_fu_755_p3 = {{24'd0}, {or_ln232_8_fu_750_p2}};

assign tmp_29_fu_825_p3 = {{24'd0}, {or_ln232_9_fu_820_p2}};

assign tmp_30_fu_839_p3 = {{24'd0}, {or_ln232_10_fu_834_p2}};

assign tmp_31_fu_909_p3 = {{24'd0}, {or_ln232_11_fu_904_p2}};

assign tmp_32_fu_923_p3 = {{24'd0}, {or_ln232_12_fu_918_p2}};

assign tmp_33_fu_993_p3 = {{24'd0}, {or_ln232_13_fu_988_p2}};

assign tmp_34_fu_1007_p3 = {{24'd0}, {or_ln232_14_fu_1002_p2}};

assign tmp_3_fu_881_p3 = {{24'd0}, {or_ln82_3_fu_876_p2}};

assign tmp_4_fu_895_p3 = {{24'd0}, {or_ln82_4_fu_890_p2}};

assign tmp_5_fu_965_p3 = {{24'd0}, {or_ln82_5_fu_960_p2}};

assign tmp_6_fu_979_p3 = {{24'd0}, {or_ln82_6_fu_974_p2}};

assign tmp_7_cast_fu_716_p1 = tmp_7_fu_709_p3;

assign tmp_7_fu_709_p3 = {{empty_31_reg_1515}, {4'd0}};

assign tmp_8_fu_727_p3 = {{24'd0}, {or_ln82_fu_721_p2}};

assign tmp_9_fu_797_p3 = {{24'd0}, {or_ln82_1_fu_792_p2}};

assign tmp_s_fu_811_p3 = {{24'd0}, {or_ln82_2_fu_806_p2}};

assign zext_ln232_fu_558_p1 = tmp_19_fu_550_p3;

always @ (posedge ap_clk) begin
    tmp_19_reg_1545[3:0] <= 4'b0000;
    tmp_7_reg_1637[3:0] <= 4'b0000;
end

endmodule //matmul_matmul_Pipeline_nopart1_nopart2
